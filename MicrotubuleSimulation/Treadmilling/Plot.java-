package treadmilling;

import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.geom.Arc2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;

import javax.swing.JApplet;
import javax.swing.JFrame;

import javax.swing.JComponent;
import java.io.*;
import java.util.Vector;


public class Plot{

    public Plot(){}

    public void draw(String p){
    //public void draw(byte d[][], int bh[], int indx, String p){

	try {

            FileInputStream fstream = new FileInputStream(p+"/length.dat");
            BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
            String strLine;
            String delimiter = "[ ]+";
            double xmax = 0.0, ymax = 0.0; // largest value on x-axis and y-axis

            while ( (strLine = br.readLine()) != null){

                String strTmp[];
                strTmp = strLine.split(delimiter);
                double x2 = Double.parseDouble(strTmp[0]);
                double y2 = Double.parseDouble(strTmp[1]);
                xmax = x2;
                if (ymax < y2) ymax = y2;

            }
            ymax = ymax+150.0;
            ymax = Math.ceil(ymax/50.0)*50.0;
            xmax = Math.ceil(xmax/50.0)*50.0;

            //double width = Math.ceil(xmax), height = Math.ceil(ymax)+100;
            int width = 1100, height = 1100;
	    //BufferedImage bi = new BufferedImage((int)width, (int)height, BufferedImage.TYPE_BYTE_INDEXED);
	    BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_INDEXED);

	    Graphics2D ig2 = bi.createGraphics();
            ig2.setColor(Color.WHITE);
            ig2.fillRect(0, 0, (int)width, (int)height);
            ig2.setColor(Color.BLACK);
            ig2.setStroke(new BasicStroke(3F));

            int bMargin = 50, lMargin = 50, rMargin = 50, tMargin = 50; // bottom margin, left margin
            int diff = 200; // every 50 pixel has a tics

            ig2.draw(new Line2D.Double(lMargin, height-bMargin, width-rMargin, height-bMargin)); // x-axis
            ig2.draw(new Line2D.Double(lMargin, tMargin, lMargin, height-bMargin)); // y-axis
            ig2.draw(new Line2D.Double(lMargin, tMargin, width-rMargin, tMargin)); // top-box boundary
            ig2.draw(new Line2D.Double(width-rMargin, tMargin, width-rMargin, height-bMargin)); // right-box boundary

            Font font = new Font("Times", Font.PLAIN, 20);
            ig2.setFont(font);
            // x-tics
            int tics = 0;
            for (; tics <= 5; ++tics){
                ig2.drawString("|", tics*diff+lMargin-5, height-bMargin);
                ig2.drawString(Integer.toString(tics*(int)xmax/5), tics*diff+lMargin, height-25);
            }
            tics = 0;
            for (; tics <= 5; ++tics){
                ig2.drawString(Integer.toString(tics*(int)ymax/5), 5, height-bMargin-tics*diff);
                ig2.drawString("-", lMargin, height-bMargin-tics*diff+5);
            }

            double x1 = 0.0, y1 = 0.0;

            fstream.getChannel().position(0);
            br = new BufferedReader(new InputStreamReader(fstream));
            while ( (strLine = br.readLine()) != null){
                String strTmp[];
                strTmp = strLine.split(delimiter);
                double x2 = Double.parseDouble(strTmp[0]);
                double y2 = Double.parseDouble(strTmp[1]);
                ig2.draw(new Line2D.Double(x1/xmax*(double)(width-lMargin-rMargin)+lMargin, height-y1/ymax*(double)(height-tMargin-bMargin)-bMargin,
                                           x2/xmax*(double)(width-lMargin-rMargin)+lMargin, height-y2/ymax*(double)(height-tMargin-bMargin)-bMargin));
                x1 = x2;
                y1 = y2;
            }

	    ImageIO.write(bi, "PNG", new File(p+"/plot.png"));
	} catch (IOException ie) {
	    ie.printStackTrace();
	}
	
    }
}


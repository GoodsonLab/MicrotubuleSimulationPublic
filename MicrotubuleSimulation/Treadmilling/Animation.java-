import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.Timer;

public class Animation extends JPanel {

    private ImageIcon images[];
    private int nImages;
    private int currImage;
    private final int ANIMATION_DELAY = 50;
    private int width;
    private int height;

    private Timer animationTimer;

    public Animation(final int n){
	nImages = n;
	images = new ImageIcon[nImages];

	for (int i = 0; i < nImages; ++i){
	    images[i] = new ImageIcon("/home/the/Research/treadmilling/"+Integer.toString(i)+".png");
	    //System.out.println(i);
	}
	width = images[0].getIconWidth();
	height = images[0].getIconHeight();
	setPreferredSize(new Dimension(width, height));
    }

    public void paintComponent(Graphics g){
	super.paintComponent(g);

	images[currImage].paintIcon(this, g, 0, 0);

	if(animationTimer.isRunning())
	    currImage = (currImage+1)%nImages;
    }

    public void startAnimation(){
	if(animationTimer == null){
	    currImage = 0;
	    animationTimer = new Timer(ANIMATION_DELAY, new TimerHandler());
	    animationTimer.start();
	}else{
	    if(!animationTimer.isRunning())
		animationTimer.restart();
	}
    }

    public void stopAnimation(){
	animationTimer.stop();
    }

    private class TimerHandler implements ActionListener{
	public void actionPerformed(ActionEvent actionEvent){
	    repaint();
	}
    }

}